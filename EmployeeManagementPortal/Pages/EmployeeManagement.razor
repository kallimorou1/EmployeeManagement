@page "/EmployeeManagement"
@using System.ComponentModel.DataAnnotations;
@using global::EmployeeManagement.Portal.Layout
@using global::EmployeeManagement.Portal.Services
@using global::EmployeeManagement.Shared.Models
@using global::EmployeeManagement.Portal.ViewModels
@layout AppLayout
@inject IEmployeeService EmployeeService
@inject NavigationManager NavigationManager
@using System.IO


@if (eManagementViewModel == null || !eManagementViewModel.Initilized)
{
    <p><em>Loading...</em></p>
}
else
{
<PageTitle>Employee Management</PageTitle>

<h1>Employee Management</h1>


    @if (!string.IsNullOrEmpty(eManagementViewModel.message))
{
        <div class="@eManagementViewModel.messageClass">@eManagementViewModel.message</div>
}

<div class="form-inline mb-2">
    <input type="text" class="form-control mr-2"
               @bind="eManagementViewModel.searchTerm"
           placeholder="Search by name, department, or position" />
</div>

<div class="form-inline mb-2">
    <label for="sortColumn" class="mr-2">Sort by:</label>
        <select id="sortColumn" class="form-control mr-2" @bind="eManagementViewModel.SortColumn" @bind:event="onchange">
            <option value="Name">Name</option>
            <option value="Position">Position</option>
            <option value="Department">Department</option>
            <option value="Salary">Salary</option>
    </select>
        <select id="sortOrder" class="form-control mr-2" @bind="eManagementViewModel.SortOrder" @bind:event="onchange">
        <option value="asc">Ascending</option>
        <option value="desc">Descending</option>
    </select>
</div>

    <button type="button" class="btn btn-dark" @onclick="eManagementViewModel.ApplyFilter">Apply</button>
    <button type="button" class="btn btn-dark" @onclick="eManagementViewModel.ClearFilter">Clear</button>



    @if (eManagementViewModel.Employees != null && eManagementViewModel.Employees.Any())
{
        <Pagination TotalPagesQuantity="@eManagementViewModel.TotalPagesQuantity"
                    currentPage="@eManagementViewModel.currentPage"
                Radius="2"
                    SelectedPage="eManagementViewModel.SelectedPage">
    </Pagination>
}

    @if (eManagementViewModel.Employees == null || eManagementViewModel.Employees.Count == 0)

{
    <p><em> No employees found </em></p>
}
else
{
    <table class="table bg-white shadow-sm">
        <thead class="table-dark">
            <tr>
                <th> ID </th>
                <th> Name </th>
                <th>Position </th>
                <th> Department </th>
                <th>Salary </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>

                @foreach (var employee in eManagementViewModel.Employees)
            {
                <tr>
                    <td>@employee.Id</td>
                    <td>@employee.Name</td>
                    <td>@employee.Position</td>
                    <td>@employee.Department</td>
                    <td>@employee.Salary</td>
                    <td>
                            <button class="btn btn-primary" @onclick="() => eManagementViewModel.UpdateEmployee(employee.Id)">Edit</button>
                            <button class="btn btn-danger" @onclick="() => eManagementViewModel.ShowDeleteModal(employee.Id)">Delete</button>

                    </td>
                </tr>
            }

        </tbody>
    </table> 

    <!-- Delete Confirmation Modal -->
        @if (eManagementViewModel.isModalVisible)
    {
        <div class="modal show d-block" tabindex="-1" role="dialog" style="background-color: rgba(0,0,0,0.5);">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirm Deletion</h5>
                            <button type="button" class="close" @onclick="eManagementViewModel.HideDeleteModal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this employee?</p>
                    </div>
                    <div class="modal-footer">
                            <button type="button" class="btn btn-warning" @onclick="eManagementViewModel.HideDeleteModal">Cancel</button>
                            <button type="button" class="btn btn-danger" @onclick="eManagementViewModel.ConfirmDeleteEmployee">Delete</button>
                    </div>
                </div>
            </div>
        </div>

    }
}

    <button class="btn btn-light" @onclick="eManagementViewModel.CreateEmployee">Create</button>
}

@code {

    [Parameter] public int Id { get; set; }
    EManagementViewModel? eManagementViewModel;
   

    protected override async Task OnInitializedAsync()
    {
        eManagementViewModel = new EManagementViewModel(NavigationManager, EmployeeService, this) { PageTitle = "Employee Management" };
       await eManagementViewModel.OnInitialized();

    }

    public void Refresh()
    {
        StateHasChanged();
    }
}
