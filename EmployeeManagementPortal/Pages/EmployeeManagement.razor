@page "/EmployeeManagement"
@using System.ComponentModel.DataAnnotations;
@using global::EmployeeManagement.Portal.Layout
@using global::EmployeeManagement.Portal.Services
@using global::EmployeeManagement.Shared.Models
@using global::EmployeeManagement.Portal.ViewModels
@using DevExpress.Blazor
@layout AppLayout
@inject IEmployeeService EmployeeService
@inject NavigationManager NavigationManager
@using System.IO


@if (eManagementViewModel == null || !eManagementViewModel.Initilized)
{
    <p><em>Loading...</em></p>
}
else
{
    <PageTitle>Employee Management</PageTitle>

    <h1>Employee Management</h1>



    @if (eManagementViewModel.Employees != null && eManagementViewModel.Employees.Any())
    {
        <Pagination TotalPagesQuantity="@eManagementViewModel.TotalPagesQuantity"
                    currentPage="@eManagementViewModel.currentPage"
                    Radius="2"
                    SelectedPage="eManagementViewModel.SelectedPage">
        </Pagination>
    }

    @if (eManagementViewModel.Employees == null || eManagementViewModel.Employees.Count == 0)

    {
        <p><em> No employees found </em></p>
    }
    else
    {
        <DxGrid Data="@eManagementViewModel.Employees"
                EditModelSaving="@OnEditModelSaving"
                AllowInsert="false"
                AllowDelete="false"
                DataItemDeleting="@OnDataItemDeleting"
                KeyFieldName="Id"
                ShowFilterRow="true"
                PageSize="10"
                ShowGroupPanel="true">
            <Columns>
                <DxGridDataColumn FieldName="Id" Caption="ID" />
                <DxGridDataColumn FieldName="Name" Caption="Name" />
                <DxGridDataColumn FieldName="Position" Caption="Position" />
                <DxGridDataColumn FieldName="Department" Caption="Department" />
                <DxGridDataColumn FieldName="Salary" Caption="Salary" />
                <DxGridCommandColumn Caption="Actions" Width="150px">
                    <CellDisplayTemplate Context="cellContext">
                        @{
                            var employee = cellContext.DataItem as Employee;
                        }
                <DxButton Text="Edit"
                          RenderStyle="ButtonRenderStyle.Primary"
                          Click="@(async () => await eManagementViewModel.UpdateEmployee(employee.Id))" />
                <DxButton Text="Delete"
                          RenderStyle="ButtonRenderStyle.Danger"
                          Click="@(async () => await eManagementViewModel.ShowDeleteModal(employee.Id))" />
            </CellDisplayTemplate>
        </DxGridCommandColumn>
    </Columns>
</DxGrid>


<!-- Delete Confirmation Modal -->
<DxPopup @bind-Visible="@eManagementViewModel.isModalVisible"
         HeaderText="Confirm Deletion"
         ShowCloseButton="true"
         Width="400px">
    <div class="mb-3">
        <p>Are you sure you want to delete this employee?</p>
    </div>
    <DxButton RenderStyle="ButtonRenderStyle.Secondary"
              Text="Cancel"
              Click="eManagementViewModel.HideDeleteModal" />
    <DxButton RenderStyle="ButtonRenderStyle.Danger"
              Text="Delete"
              Click="eManagementViewModel.ConfirmDeleteEmployee" />
</DxPopup>
}

<DxButton RenderStyle="ButtonRenderStyle.Success"
          Text="Create Employee"
          Click="@OnCreateClick"
          style="margin: 2rem">
</DxButton>


}

@code {

    EManagementViewModel? eManagementViewModel;

    protected override async Task OnInitializedAsync()
    {
        eManagementViewModel = new EManagementViewModel(NavigationManager, EmployeeService, this) { PageTitle = "Employee Management" };
        await eManagementViewModel.OnInitialized();

    }

    async Task OnEditModelSaving(GridEditModelSavingEventArgs args)
    {
        var employee = args.EditModel as Employee;
        await eManagementViewModel.UpdateEmployee(employee.Id);
    }

    async Task OnDataItemDeleting(GridDataItemDeletingEventArgs args)
    {
        var employee = args.DataItem as Employee;
        await eManagementViewModel.ShowDeleteModal(employee.Id);
    }

    void OnCreateClick()
    {
        NavigationManager.NavigateTo("/Create");
    }

    public void Refresh()
    {
        StateHasChanged();
    }
}
